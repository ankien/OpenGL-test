#version 410

out vec4 fragColor;
in vec3 triColor;
in vec2 outTexCoord;
in vec3 outNormal;
in vec3 fragPos;

uniform sampler2D ourTexture;
uniform sampler2D ourTexture2;
uniform vec3 lightColor;
uniform vec3 lightPos;

void main() {
    float ambientLightStrength = 0.2;
    vec3 ambient = ambientLightStrength * lightColor;

    vec3 normNorm = normalize(outNormal);
    vec3 lightDir = normalize(lightPos - fragPos);
    float diff = max(dot(normNorm,lightDir),0.0);
    vec3 diffuse = diff * lightColor;

    vec3 result = (ambient + diffuse) * vec3(mix(texture(ourTexture,outTexCoord) * vec4(triColor, 1.0), texture(ourTexture2,outTexCoord), 0.4));
    fragColor = vec4(result,1.0);
}